class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> result;
        if(nums.size() < 4)
            return result;
        
        vector<int>::iterator it1 = nums.begin();
        vector<int>::iterator it4 = nums.end();
        sort(it1, it4);
        it4--;
        vector<int>::iterator it2 = it1 + 1;
        vector<int>::iterator it3 = it2 + 1;
       for(; it1 <= prev(it4, 3); it1++)
       {
            if(it1 != nums.begin())
                    if(*it1 == *(it1 - 1))
                        continue;
            for(it2 = it1 + 1; it2 <= it4 - 2; it2++)
            {
                if(it2 != it1 + 1)
                    if(*it2 == *(it2 - 1))
                        continue;
                it3 = it2 + 1;
                it4 = nums.end() - 1;
                while(it3 < it4)
                {
                if(*it1 + *it2 + *it3 + *it4 == target)
                {
                    result.push_back({*it1, *it2, *it3, *it4});
                    it3++;
                    while(*it3 == *(it3 - 1)&&it3 < it4)
                        it3++;
                }
                else if(*it1 + *it2 + *it3 + *it4 < target)
                {
                    it3++;
                    while(*it3 == *(it3 - 1)&&it3 < it4)
                        it3++;
                }
                else
                {
                    it4--;
                    while(*it4 == *(it4 + 1)&&it3 < it4)
                        it4--;
                }
                }
            }
        }
        return result;
    }
};
